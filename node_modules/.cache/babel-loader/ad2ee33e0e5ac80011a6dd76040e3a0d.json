{"ast":null,"code":"import _slicedToArray from\"/Users/isaiahyoon/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/isaiahyoon/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/isaiahyoon/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/isaiahyoon/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/isaiahyoon/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import'./index.css';var winningStyle={color:'blue'};function Square(props){return/*#__PURE__*/React.createElement(\"button\",{className:\"square\",onClick:props.onClick,style:props.isWinning?winningStyle:null},props.value);}var Board=/*#__PURE__*/function(_React$Component){_inherits(Board,_React$Component);var _super=_createSuper(Board);function Board(){_classCallCheck(this,Board);return _super.apply(this,arguments);}_createClass(Board,[{key:\"renderSquare\",value:function renderSquare(i){var _this=this;return/*#__PURE__*/React.createElement(Square,{value:this.props.squares[i],onClick:function onClick(){return _this.props.onClick(i);},isWinning:this.props.winningSquares.includes(i)});}},{key:\"render\",value:function render(){var board=[];for(var row=0;row<3;row++){var squares=[];for(var col=0;col<3;col++){var i=row*3+col;squares.push(/*#__PURE__*/React.createElement(\"span\",{key:i},this.renderSquare(i)));}board.push(/*#__PURE__*/React.createElement(\"div\",{key:row,className:\"board-row\"},squares));}return/*#__PURE__*/React.createElement(\"div\",null,board);}}]);return Board;}(React.Component);var Game=/*#__PURE__*/function(_React$Component2){_inherits(Game,_React$Component2);var _super2=_createSuper(Game);function Game(props){var _this2;_classCallCheck(this,Game);_this2=_super2.call(this,props);_this2.state={history:[{squares:Array(9).fill(null),moveLocation:null}],xIsNext:true,stepNumber:0,sortByAscending:true};return _this2;}_createClass(Game,[{key:\"handleClick\",value:function handleClick(i){var history=this.state.history.slice(0,this.state.stepNumber+1);var current=history[history.length-1];var squares=current.squares.slice();if(calculateWinner(squares)||squares[i]){return;}squares[i]=this.state.xIsNext?'X':'O';this.setState({history:history.concat([{squares:squares,moveLocation:calculateRowCol(i)}]),xIsNext:!this.state.xIsNext,stepNumber:history.length});}},{key:\"jumpTo\",value:function jumpTo(step){this.setState({stepNumber:step,xIsNext:step%2===0});}},{key:\"toggleSort\",value:function toggleSort(){this.setState({sortByAscending:!this.state.sortByAscending});}},{key:\"render\",value:function render(){var _this3=this;var history=this.state.history;var stepNumber=this.state.stepNumber;var current=history[stepNumber];var winner=calculateWinner(current.squares);var draw=isDraw(current.squares,stepNumber);var moves=history.map(function(step,i){var isCurrentStep=i===stepNumber;var desc=i?'Go to move '+i+': ('+step.moveLocation+')':'Go to game start';return/*#__PURE__*/React.createElement(\"li\",{key:i},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.jumpTo(i);}},isCurrentStep?/*#__PURE__*/React.createElement(\"b\",null,desc):desc));});if(!this.state.sortByAscending){moves.reverse();}var status;if(winner){status='Winner: '+winner[0];}else if(draw){status='Draw';}else{status='Next player: '+(this.state.xIsNext?'X':'O');}var sortOrder='Sort by '+(this.state.sortByAscending?'descending':'ascending');return/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-board\"},/*#__PURE__*/React.createElement(Board,{squares:current.squares,onClick:function onClick(i){return _this3.handleClick(i);},winningSquares:winner?winner[1]:[]})),/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(\"div\",null,status),/*#__PURE__*/React.createElement(\"ol\",null,moves),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.toggleSort();}},sortOrder))));}}]);return Game;}(React.Component);// ========================================\nReactDOM.render(/*#__PURE__*/React.createElement(Game,null),document.getElementById('root'));function calculateWinner(squares){var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),x=_lines$i[0],y=_lines$i[1],z=_lines$i[2];if(squares[x]&&squares[x]===squares[y]&&squares[x]===squares[z]){return[squares[x],lines[i]];}}return null;}function isDraw(squares,stepNumber){return stepNumber===9&&!calculateWinner(squares);}function calculateRowCol(i){var row=Math.floor(i/3);var col=i%3;return[row,col];}","map":{"version":3,"sources":["/Users/isaiahyoon/my-app/src/index.js"],"names":["React","ReactDOM","winningStyle","color","Square","props","onClick","isWinning","value","Board","i","squares","winningSquares","includes","board","row","col","push","renderSquare","Component","Game","state","history","Array","fill","moveLocation","xIsNext","stepNumber","sortByAscending","slice","current","length","calculateWinner","setState","concat","calculateRowCol","step","winner","draw","isDraw","moves","map","isCurrentStep","desc","jumpTo","reverse","status","sortOrder","handleClick","toggleSort","render","document","getElementById","lines","x","y","z","Math","floor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst winningStyle = {\n    color: 'blue'\n}\n\nfunction Square(props) {\n\n    return (\n        <button className=\"square\" onClick={props.onClick} style={props.isWinning ? winningStyle : null}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square \n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n                isWinning={this.props.winningSquares.includes(i)}\n            />\n        );\n    }\n\n    render() {\n        let board = [];\n        for (let row = 0; row < 3; row++) {\n            let squares = []\n            for (let col = 0; col < 3; col++) {\n                let i = row * 3 + col;\n                squares.push(<span key={i}>{this.renderSquare(i)}</span>);\n            }\n            board.push(<div key={row} className=\"board-row\">{squares}</div>)  \n        }\n\n        return <div>{board}</div>;\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n                moveLocation: null\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n            sortByAscending: true\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n                moveLocation: calculateRowCol(i)\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0\n        });\n    }\n\n    toggleSort() {\n        this.setState({\n            sortByAscending: !this.state.sortByAscending\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const stepNumber = this.state.stepNumber;\n        const current = history[stepNumber];\n        const winner = calculateWinner(current.squares);\n        const draw = isDraw(current.squares, stepNumber);\n\n        const moves = history.map((step, i) => {\n            const isCurrentStep = i === stepNumber;\n            const desc = i ?\n                'Go to move ' + i + ': (' + step.moveLocation + ')':\n                'Go to game start';\n            return (\n                <li key={i}>\n                    <button onClick={() => this.jumpTo(i)}>\n                        {isCurrentStep\n                            ? <b>{desc}</b>\n                            : desc\n                        }\n                    </button>\n                </li>\n            );\n        });\n        if (!this.state.sortByAscending) {\n            moves.reverse();\n        }\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner[0];\n        } else if (draw) {\n            status = 'Draw'\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        let sortOrder = 'Sort by ' + (this.state.sortByAscending ? 'descending' : 'ascending');\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                        winningSquares={winner ? winner[1] : []}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                    <div>\n                        <button onClick={() => this.toggleSort()}>{sortOrder}</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [x, y, z] = lines[i];\n        if (squares[x] && squares[x] === squares[y] && squares[x] === squares[z]) {\n            return [squares[x], lines[i]];\n        }\n    }\n    return null;\n}\n\nfunction isDraw(squares, stepNumber) {\n    return stepNumber === 9 && !calculateWinner(squares);\n}\n\nfunction calculateRowCol(i) {\n    const row = Math.floor(i / 3);\n    const col = i % 3;\n    return [row, col];\n}\n"]},"metadata":{},"sourceType":"module"}